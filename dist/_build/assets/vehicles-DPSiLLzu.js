import{p as t}from"./utils-8e6BCVt_.js";import{R as c,X as d,Y as i,Z as o,_ as r,$ as s,a0 as l,a1 as u,a2 as m,a3 as a,a4 as p}from"./client-D0JzVCqi.js";i({brand:r().min(1,"La marca es requerida").trim(),model:r().min(1,"El modelo es requerido").trim(),year:l([a().int().min(1900).max(2050),r().min(4)]).transform(e=>{const n=parseInt(String(e),10);if(isNaN(n))throw new Error("El año debe ser un número válido");return n}),trim:r().optional().nullable().transform(e=>e===""?null:e),vehicleType:r().min(1,"El tipo de vehículo es requerido").trim(),color:r().min(1,"El color es requerido").trim(),status:m(["available","sold","reserved","in_process","maintenance"]).default("available"),condition:m(["new","used"]).default("new"),images:u(r()).optional().default([]),description:r().optional().nullable().transform(e=>e===""?null:e),transmission:r().min(1,"La transmisión es requerida").trim(),fuelType:r().min(1,"El tipo de combustible es requerido").trim(),engineSize:r().min(1,"El tamaño del motor es requerido").trim(),plate:r().max(10,"La placa no puede exceder 10 caracteres").optional().nullable().transform(e=>e===""?null:e),vin:r().min(17,"El VIN debe tener 17 caracteres").max(17,"El VIN debe tener 17 caracteres").trim(),mileage:l([a().int().min(0),r()]).optional().nullable().transform(e=>{if(e==null||e==="")return null;const n=parseInt(String(e),10);return isNaN(n)?null:n}),doors:l([a().int().min(1),r().min(1)]).transform(e=>{const n=parseInt(String(e),10);if(isNaN(n))throw new Error("El número de puertas debe ser válido");return n}),seats:l([a().int().min(1),r().min(1)]).transform(e=>{const n=parseInt(String(e),10);if(isNaN(n))throw new Error("El número de asientos debe ser válido");return n}),price:l([a().min(0),r().min(1)]).transform(e=>{const n=t(e);if(n===null||n<=0)throw new Error("El precio debe ser mayor a 0");return n}),hasOffer:s().default(!1),offerPrice:l([a().min(0),r()]).optional().nullable().transform(t),adminStatus:r().optional().nullable().transform(e=>e===""?null:e),inMaintenance:s().default(!1),entryDate:r().optional().nullable().transform(e=>e===""?null:e),concesionarioId:o("ID de concesionario inválido").optional().nullable().transform(e=>e===""?null:e)});i({brand:r().min(1,"La marca es requerida").trim(),model:r().min(1,"El modelo es requerido").trim(),year:l([a().int().min(1900).max(2050),r().min(4)]).transform(e=>{const n=parseInt(String(e),10);if(isNaN(n))throw new Error("El año debe ser un número válido");return n}),trim:r().optional().nullable().transform(e=>e===""?null:e),vehicleType:r().min(1,"El tipo de vehículo es requerido").trim(),color:r().min(1,"El color es requerido").trim(),status:m(["available","sold","reserved","in_process","maintenance"]).default("available"),condition:m(["new","used"]).default("new"),images:u(i({data:r(),name:r(),type:r(),size:a()})).optional().default([]),description:r().optional().nullable().transform(e=>e===""?null:e),transmission:r().min(1,"La transmisión es requerida").trim(),fuelType:r().min(1,"El tipo de combustible es requerido").trim(),engineSize:r().min(1,"El tamaño del motor es requerido").trim(),plate:r().max(10,"La placa no puede exceder 10 caracteres").optional().nullable().transform(e=>e===""?null:e),vin:r().min(17,"El VIN debe tener 17 caracteres").max(17,"El VIN debe tener 17 caracteres").trim(),mileage:l([a().int().min(0),r()]).optional().nullable().transform(e=>{if(e==null||e==="")return null;const n=parseInt(String(e),10);return isNaN(n)?null:n}),doors:l([a().int().min(1),r().min(1)]).transform(e=>{const n=parseInt(String(e),10);return isNaN(n)?null:n}).nullable().refine(e=>e!==null,{message:"El número de puertas es requerido"}),seats:l([a().int().min(1),r().min(1)]).transform(e=>{const n=parseInt(String(e),10);return isNaN(n)?null:n}).nullable().refine(e=>e!==null,{message:"El número de asientos es requerido"}),price:l([a().min(0),r().min(1)]).transform(t).nullable().refine(e=>e!==null&&e>0,{message:"El precio es requerido"}),hasOffer:s().default(!1),offerPrice:l([a().min(0),r()]).optional().nullable().transform(t),adminStatus:r().optional().nullable().transform(e=>e===""?null:e),inMaintenance:s().default(!1),entryDate:p({offset:!0}).optional().nullable(),concesionarioId:o("ID de concesionario inválido").optional().nullable().transform(e=>e===""?null:e)});i({vehicleId:o("ID de vehículo inválido"),updateData:i({concesionarioId:o("ID de concesionario inválido").optional().nullable().transform(e=>e===""?null:e)}).refine(e=>Object.keys(e).length>0,{message:"No se proporcionaron campos para actualizar"})});const f=d("src_server_vehicles_ts--fetchVehicles_createServerFn_handler","/_server"),E=c({method:"GET"}).handler(f),h=d("src_server_vehicles_ts--fetchVehicleById_createServerFn_handler","/_server"),I=c({method:"GET"}).handler(h),v=d("src_server_vehicles_ts--createVehicleServer_createServerFn_handler","/_server"),N=c({method:"POST"}).handler(v),b=d("src_server_vehicles_ts--updateVehicleServer_createServerFn_handler","/_server"),g=c({method:"POST"}).handler(b);export{N as createVehicleServer,I as fetchVehicleById,E as fetchVehicles,g as updateVehicleServer};
